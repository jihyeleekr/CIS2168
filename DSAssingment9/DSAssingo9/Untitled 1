Problem 1:
2) a) HashMap vs. TreeMap:

HashMap does not guarantee any specific order of elements and generally provides faster 
insertion and retrieval operations with an average time complexity of O(1). It is suitable when the order 
of elements is not relevant, and quick access to key-value pairs is crucial.TreeMap maintains elements in 
sorted order, based on natural ordering or a specified comparator. 
It has slower insertion and retrieval compared to HashMap with an average time complexity of O(log n). 
It is useful when elements need to be sorted, and the ordering of keys is significant for the problem.

b) HashSet vs. TreeSet:

HashSet does not guarantee any specific order of elements and generally provides faster 
insertion and lookup operations with an average time complexity of O(1). It is appropriate when the 
uniqueness of elements is essential, and the order is not a consideration. TreeSet maintains elements in 
sorted order, based on natural ordering or a specified comparator. It has slower insertion and retrieval 
compared to HashSet with an average time complexity of O(log n). It is useful when elements need to be 
unique and sorted according to a specific order.


Problem 2:
76 % 7 = 6, 40 % 7 = 5
48 % 7 = 6 (Collision), 5 % 7 = 5 (Collision)
55 % 7 = 6 (Collision), 47 % 7 = 5 (Collision)
________________________________________________
a) 0: 48        
   1: 5
   2: 55
   3: 47
   4
   5: 40
   6: 76
   
   Load Factor: 6 % 7 = 6
________________________________________________
 b) 0:
 	1:
 	2:
 	3:
 	4:
 	5:40 -> 5 -> 47
 	6:76 -> 48 -> 55
 	
 	Load Factor: 2 % 7 = 2
 ________________________________________________
 c) 76 % 7 = 6, 40 % 7 = 5
	48 % 7 = 6 (Collision)
		i = 1 
		48 + i^2 % 7 = 49 % 7 = 0
	5 % 7 = 5 (Collision)
		i = 1
		5 + i^2 % 7 = 6 % 7 = 6 (Collision)
		i = 2
		5 + i^2 % 7 = 9 % 7 = 2 (Collision)
	55 % 7 = 6 (Collision)
		i = 1
		55 + i^2 % 7 = 56 % 7 = 0 (Collision)
		i = 2
		55 + i^2 % 7 = 59 % 7 = 3	
	47 % 7 = 5 (Collision)
		i = 1
		47 + i^2 = 48 % 7 = 6 (Collision)
		i = 2
		47 +i^2 = 51 % 7 = 2 (Collision) [ERROR]

 	0: 48
 	1:
 	2: 5
 	3: 55
 	4: 
 	5: 40
 	6: 76
 	Load Factor: 5 % 7 = 5

 3. h(k) = k % 13
 	18 % 13 = 5, 41 % 13 = 3
 	22 % 13 = 9, 44 % 13 = 5 (Collision)
 	59 % 13 = 7, 32 % 13 = 6 (Collision)
 	31 % 13 = 5 (Collision), 73 % 13 = 8 (Collision)
 	
 	a) 0:
 	   1:
 	   2:
 	   3:41
 	   4:
 	   5:18
 	   6:44
 	   7:59
 	   8:32
 	   9:22
 	   10:31
 	   11:73
 	   12:
 	   
 	   Load Factor: 8 % 13 = 8
________________________________________________ 	   
 	18 % 13 = 5, 41 % 13 = 3
 	22 % 13 = 9, 44 % 13 = 5 (Collision)
 	59 % 13 = 7, 32 % 13 = 6 
 	31 % 13 = 5 (Collision), 73 % 13 = 8 
 	   
 	b) 0:
 	   1:
 	   2:
 	   3:41
 	   4:
 	   5:18 -> 44 -> 31
 	   6:32
 	   7:59
 	   8:73
 	   9:22
 	   10:
 	   11:
 	   12:
 	   
 	   Load Factor: 6 % 13 = 6
________________________________________________ 
 	c) 18 % 13 = 5, 41 % 13 = 3, 22 % 13 = 9, 
 	   44 % 13 = 5 (Collision)
 	   	i = 1
 	   	44 +i^2 = 45 % 13 = 6
 	   59 % 13 = 7
 	   32 % 13 = 6 (Collision)
 	   	i = i
 	   	32 + i^2 = 33 % 13 = 7 (Collision)
 	   	i = 2
 	   	32 + i^2 = 36 % 13 = 10
 	   31 % 13 = 5 (Collision)
 	   	i = 1
 	   	31 + i^2 = 32 % 13  = 6 (Collision)
 	   	i = 2
 	   	31 + i^2 = 35 % 13 = 9 (Collision)[Error]
 	   	
 	   73 % 13 = 8 (Collision)
 	   	i = 1
 	   	73 + i^2 = 74 % 13 = 9 (Collision)
 	   	i = 2
 	   	73 +i^2 = 77 % 13 = 12
 	
 	0:
 	1:
 	2:
 	3:
 	4:41
 	5:18
 	6:44
 	7:59
 	8:
 	9:22
 	10:32
 	11:
 	12:73
 	
 	Load Factor: 7 % 13 = 7